{
  "openapi": "3.0.3",
  "info": {
    "title": "Rental Mobil - OpenAPI 3.0",
    "description": "Dokumentasi untuk API Rental Mobil",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8000/api/v1"
    },
    {
      "url": "http://rental-mobil.xyz"
    }
  ],
  "tags": [
    {
      "name": "cars",
      "description": "Everything about your cars"
    },
    {
      "name": "auth",
      "description": "Authentication"
    }
  ],
  "paths": {
    "/cars": {
      "get": {
        "tags": [
          "car"
        ],
        "summary": "Get all car data",
        "description": "Listing all car data",
        "operationId": "getCars",
        "responses": {
          "200": {
            "$ref": "#/components/responses/Cars"
          },
          "404": {
            "description": "Cars not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "car"
        ],
        "summary": "Add a new car to database",
        "description": "Add a new car to database",
        "operationId": "createCar",
        "requestBody": {
          "description": "Create a car in the database",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Car"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Car"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/cars/{id}": {
      "get": {
        "tags": [
          "car"
        ],
        "summary": "Find car by ID",
        "description": "Returns a single car",
        "operationId": "getCarById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of car to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Car"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          }
        }
      },
      "put": {
        "tags": [
          "car"
        ],
        "summary": "Updates a car in the store with form data",
        "description": "",
        "operationId": "updateCarWithForm",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of car that needs to be updated",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Car"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "car"
        ],
        "summary": "Deletes a car",
        "description": "delete a car",
        "operationId": "deleteCar",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Car id to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Invalid id value"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Login",
        "description": "Login",
        "operationId": "login",
        "requestBody": {
          "description": "Login",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "example@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "Password1!"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "berhasil login"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Register",
        "description": "Register",
        "operationId": "register",
        "requestBody": {
          "description": "Register",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string",
                    "example": "admin"
                  },
                  "lastName": {
                    "type": "string",
                    "example": 123
                  },
                  "email": {
                    "type": "string",
                    "example": "example@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "Password1!"
                  },
                  "role": {
                    "type": "string",
                    "example": "user"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "berhasil register"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Car": {
        "required": [
          "model",
          "manufactur"
        ],
        "type": "object",
        "properties": {
          "model": {
            "type": "string",
            "example": "Fortuner"
          },
          "manufactur": {
            "type": "string",
            "example": "Toyota"
          },
          "foto": {
            "type": "string",
            "example": "http://example.com/fortuner.jpg"
          },
          "harga_sewa": {
            "type": "number",
            "example": 700000
          },
          "ukuran": {
            "type": "string",
            "example": "Large"
          }
        }
      }
    },
    "requestBodies": {
      "Car": {
        "description": "Car object",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Car"
            }
          }
        }
      }
    },
    "responses": {
      "Car": {
        "description": "Car object",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "OK"
                },
                "data": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Car"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int64",
                          "example": 10
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updateAt": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "Cars": {
        "description": "Car list",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "OK"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Car"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "example": 10
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updateAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}